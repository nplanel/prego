// +build main

package main

import "fmt"

func (inline) DOUBLE(x int) int {
	return ((x) + (x))
}

func (inline) SUM(A int, B int) int {
	___z := (A) + (B)
	return ___z
}

func (macro) ASSIGN(v, a) {
	/* Only slash-star comments are OK in a macro. */
	v = (a)
	return
}

func (macro) cond(predicate, ifTrue, ifFalse, resultType) {
	var ___z resultType
	if predicate {
		___z = (ifTrue)
	} else {
		___z = (ifFalse)
	}
	return ___z
}

func main() {
	fmt.Println("Double 5 =", macro.DOUBLE(5))
	fmt.Println("Sum 5, 8 =", macro.SUM(5, 8))
	fmt.Println("Sum (5, 8), (3, 4) =", macro.SUM(macro.SUM(5, 8), macro.SUM(3, 4)))
	fmt.Println("Double Sum (5, 8), (3, 4) =", macro.DOUBLE(macro.SUM(macro.SUM(5, 8), macro.SUM(3, 4))))
	fmt.Println("Double Double Sum (5, 8), (3, 4) =", macro.DOUBLE(macro.DOUBLE(macro.SUM(macro.SUM(5, 8), macro.SUM(3, 4)))))
	fmt.Println("Sum 1 Double Double Sum (5, 8), (3, 4) =", macro.SUM(1, macro.DOUBLE(macro.DOUBLE(macro.SUM(macro.SUM(5, 8), macro.SUM(3, 4))))))

	var x, y int
	macro.ASSIGN(x, 23)
	macro.ASSIGN(y, 42)
	fmt.Println("x =", x, "; y =", y)
	fmt.Println("x < y ?", macro.cond(x < y, "Yes", "No", string))
}
